{"version":3,"sources":["stores/UserStore.js","InputField.js","SubmitButton.js","Login.js","App.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","email","InputField","className","type","props","placeholder","value","onChange","e","target","React","Component","SubmitButton","disabled","onClick","text","Login","state","password","buttonDisabled","property","val","trim","length","setState","a","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStore","resetForm","alert","msg","console","log","setInputValue","doLogin","App","doLogout","observer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7da440eb.chunk.js","sourcesContent":["import { extendObservable } from 'mobx';\r\n\r\nclass UserStore {\r\n    constructor() {\r\n        extendObservable(this, {\r\n            loading: true,\r\n            isLoggedIn: false,\r\n            email: ''\r\n        })\r\n    }\r\n}\r\n\r\nexport default new UserStore();","import React from 'react'\r\n\r\nclass InputField extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"inputField\">\r\n                <input\r\n                    className='input'\r\n                    type={this.props.type}\r\n                    placeholder={this.props.placeholder}\r\n                    value={this.props.value}\r\n                    onChange={ (e) => this.props.onChange(e.target.value) }\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default InputField;","import React from 'react'\r\n\r\nclass SubmitButton extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"submitButton\">\r\n                <button \r\n                    className='btn'\r\n                    disabled={this.props.disabled}\r\n                    onClick={ () => this.props.onClick() }\r\n                >\r\n                    {this.props.text}\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default SubmitButton;","import React            from 'react'\r\nimport InputField       from './InputField';\r\nimport SubmitButton     from './SubmitButton';\r\nimport UserStore        from './stores/UserStore';\r\nimport userEvent from '@testing-library/user-event';\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            buttonDisabled: false\r\n        }\r\n    }\r\n\r\n    setInputValue(property, val) {\r\n        val = val.trim();\r\n        if (val.length > 45) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            [property]: val\r\n        })\r\n    }\r\n\r\n    resetForm() {\r\n        this.setState({\r\n            email: '',\r\n            password: '',\r\n            buttonDisabled: false\r\n        })\r\n    }\r\n\r\n    async doLogin() {\r\n        if (!this.state.email) {\r\n            return;\r\n        }\r\n        if (!this.state.password) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            buttonDisabled: true\r\n        })\r\n\r\n        try {\r\n            let res = await fetch('/login', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    email: this.state.email,\r\n                    password: this.state.password\r\n                })\r\n            });\r\n\r\n            let result = await res.json();\r\n            if (result && result.success) {\r\n                UserStore.isLoggedIn = true;\r\n                UserStore.email = result.email;\r\n            } else if (result && result.success === false) {\r\n                this.resetForm();\r\n                alert(result.msg);\r\n            }\r\n\r\n        }\r\n        catch(e) {\r\n            console.log(e);\r\n            this.resetForm();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login\">\r\n                Log In\r\n\r\n                <InputField\r\n                    type='text'\r\n                    placeholder='Email'\r\n                    value={this.state.email ? this.state.email : ''}\r\n                    onChange={ (val) => this.setInputValue('email', val) }\r\n                />\r\n                <InputField\r\n                    type='password'\r\n                    placeholder='Password'\r\n                    value={this.state.email ? this.state.password : ''}\r\n                    onChange={ (val) => this.setInputValue('password', val) }\r\n                />\r\n\r\n                <SubmitButton\r\n                    text={'Login'}\r\n                    disabled={this.state.buttonDisabled}\r\n                    onClick={ () => this.doLogin() }\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Login;","import React        from 'react';\nimport { observer } from 'mobx-react';\nimport UserStore    from './stores/UserStore';\nimport Login        from './Login';\nimport SubmitButton from './SubmitButton';\nimport './App.css';\nimport userEvent from '@testing-library/user-event';\n\nclass App extends React.Component {\n\n  async componentDidMount() {\n    try {\n      let res = await fetch('/isLoggedIn', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/json'\n        }\n      });\n\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.email = result.email;\n      } else {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n    }\n    catch(e) {\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n  }\n\n  async doLogout() {\n    try {\n      let res = await fetch('/logout', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/json'\n        }\n      });\n\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.isLoggedIn = false;\n        UserStore.email = '';\n      }\n    }\n    catch(e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n\n    if(UserStore.loading) {\n      return (\n        <div className=\"app\">\n          <div className='container'>\n            Loading...\n          </div>\n        </div>\n      )\n    } else {\n      if (UserStore.isLoggedIn) {\n        return (\n          <div className=\"app\">\n            <div className='container'>\n              Welcome {UserStore.email}\n\n              <SubmitButton\n                text={'Log out'}\n                disabled={false}\n                onClick={ () => this.doLogout() }\n              />\n\n            </div>\n          </div>\n        )\n      }\n    }\n    return (\n      <div className=\"app\">\n        <div className='container'>\n          <Login />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default observer(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}